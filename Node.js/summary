Node.JS的学习
    1.什么是node.js
       运行在服务端的js(没有了浏览器的安全级别限制，意思就是可以调用系统级的API)

    2.安装
     去官网下载对应版本的node.js进行安装，但是我们并不采取此种方式进行安装，因为在
     我们的开发当中，往往会使用多个版本，所以我们将会使用nvm（nodejs的版本管理工具） 来安装使用多个版本的node.js

     2.1 nvm的安装
     下载nvm安装版本直接安装，安装完成之后，就可以打开cmd使用(注意源问题)


    3.vnm使用
        命令提示
        nvm arch ：显示node是运行在32位还是64位。
        nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加--insecure绕过远程服务器的SSL。
        nvm list [available] ：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。
        nvm on ：开启node.js版本管理。
        nvm off ：关闭node.js版本管理。
        nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。
        nvm node_mirror [url] ：设置node镜像。默认是https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。
        nvm npm_mirror [url] ：设置npm镜像。https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。
        nvm uninstall <version> ：卸载指定版本node。
        nvm use [version] [arch] ：使用制定版本node。可指定32/64位。
        nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。
        nvm version ：显示nvm版本。version可简化为v。

    可以通过nvm来下载别的版本的nodejs，或者使用node use 选择需要的版本node（必须是已经下载好的）
        下载：nvm install <version(版本号)>
        使用：vem user <version(版本号)>  或者在项目文件中配置好【 .nvmrc 】文件  ，文件内容就是版本号







