jQuery的学习
        $就是jquery   同dom封装的获取元素节点原理相同

        1.与原生js对应
        $:就是选择器
        html    ==  innerHTML
        【格式】元素节点.html()

        val     ==  input里的value属性
        【格式】元素节点.val()

        prop    ==
        attr    == attribute
        【格式】元素节点.prop()
        【注意】其它没什么区别，主要checked默认选中在attr里面没有变化
        因此，对于checked使用prop


        append();

        为匹配父元素的末尾添加子元素
        参数：html标签.append("<h1>这样</h1>")
        参数：也可以是当前页面存在的元素节点（相当于剪切，粘贴）(如果被剪切的元素存在子元素也会被一起剪切)
        参数：也可以是新创建的元素节点

        after();     .before() 与after()相反
        添加兄弟节点
        参数：html标签.append("<h1>这样</h1>")
        参数：也可以是当前页面存在的元素节点（相当于剪切，粘贴）(如果被剪切的元素存在子元素也会被一起剪切)
        参数：也可以是新创建的元素节点

        addClass();
        为匹配的元素添加类名,并且可以匹配相应的样式
        参数：名称

         removeClass()
         【格式】元素节点.removeClass

        bind()
        为元素添加事件
        如：元素节点.bind("click" , function(){
            //执行语句
        })

        parent()
        找到当前元素的直接父元素

        child()
        所有的子元素

        find()
        所有的后代子元素

        next()
        当前节点元素的后一个节点元素

        pref()
        当前节点元素的前一个节点元素

        在jQuery 1.4中，我们可以通过传递一个事件类型/处理函数的数据键值对映射来绑定多个事件处理程序，例如：

        $('#foo').bind({
          click: function() {
            // do something on click            //也可以调用有名函数，元素节点对象.off()可以释放某一事件，如.off('mouseover')；
          },
          mouseenter: function() {
            // do something on mouseenter
          }
        });
        【注意】在jquery当中存在问题
        问题1：使用document动态插入标签时，如果在bind方法前，是可以被附上bind事件效果，如果在后面就无法触发。
            解决方案：插入标签写在前面

        问题2：使用on绑定事件时，也会触发以上效果
        解决方案：事件代理，给需要添加事件得父元素添加on，
        如：给li添加事件
        $('ul').on('click' ,'li', function(){       给li标签得父元素ul添加on，具体指定在第二个参数
                $(this).css('background' , '#fe0000');
            })

            $('ul').append('<li>6</li>');       //这是新添加得li标签





        .css()
        获取匹配元素集合中的第一个元素的样式属性的值设置每个匹配元素的一个或多个CSS属性。

        .eq(index)
        可以选择集合中的某一个下标为index的对象

        .last()
        获取匹配元素集合中最后一个元素。

        index()             【重点】;
        【格式】在元素集合中找出指定元素节点的下标
        比如：用for in 循环遍历一个元素节点对象数组，然后每次判断是否符合要找的某一个元素，是就返回下标

        remove()  删除节点      元素节点1.remove()  元素节点1将会被删除
        empty()   删除节点内容  元素节点1.empty()    元素节点1得内容将会被删除

【注意】当元素节点添加事件之后，this指针就不是指向window，还是指向当前元素节点
        和函数一个道理，函数里的this是指向本身所代表得html标签(千万不能误以为是jquery对象)


利用jquery来使用ajax
    $.ajax({
        type: "get",
        url:   "需要请求的页面地址"

        //如果需要带数据传送
        data:{
            name : value;
        },

        success:function(resp){
            //请求成功使调用
        }

        error: function(){
            //请求失败时调用
        }
    })

    但是在ajax中具有回调地狱的bug，因此我们需要使用以下
    $.ajax({
        type : "get",
        url  : "需要请求的地址"

    }).done(function(){
            //请求成功时调用       //以后调用的ajax可以type：请求方式可以省略
            调用第二个ajax
            $.ajax({
            url:"需要请求的地址"，

            }).done(function(){
            调用第三个ajax;
            $.ajax({
            url:"需要请求的地址"，
            })
            })
    })

     这样就可以解决回调地狱